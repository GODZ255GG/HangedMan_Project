//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HangedMan_Client.WordServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/HangedMan_Server.Model.POCO")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnglishCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpanishCategoryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishCategory {
            get {
                return this.EnglishCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.EnglishCategoryField, value) != true)) {
                    this.EnglishCategoryField = value;
                    this.RaisePropertyChanged("EnglishCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpanishCategory {
            get {
                return this.SpanishCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.SpanishCategoryField, value) != true)) {
                    this.SpanishCategoryField = value;
                    this.RaisePropertyChanged("SpanishCategory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Word", Namespace="http://schemas.datacontract.org/2004/07/HangedMan_Server.Model.POCO")]
    [System.SerializableAttribute()]
    public partial class Word : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnglishClueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnglishWordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpanishClueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpanishWordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WordIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishClue {
            get {
                return this.EnglishClueField;
            }
            set {
                if ((object.ReferenceEquals(this.EnglishClueField, value) != true)) {
                    this.EnglishClueField = value;
                    this.RaisePropertyChanged("EnglishClue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishWord {
            get {
                return this.EnglishWordField;
            }
            set {
                if ((object.ReferenceEquals(this.EnglishWordField, value) != true)) {
                    this.EnglishWordField = value;
                    this.RaisePropertyChanged("EnglishWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpanishClue {
            get {
                return this.SpanishClueField;
            }
            set {
                if ((object.ReferenceEquals(this.SpanishClueField, value) != true)) {
                    this.SpanishClueField = value;
                    this.RaisePropertyChanged("SpanishClue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpanishWord {
            get {
                return this.SpanishWordField;
            }
            set {
                if ((object.ReferenceEquals(this.SpanishWordField, value) != true)) {
                    this.SpanishWordField = value;
                    this.RaisePropertyChanged("SpanishWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WordID {
            get {
                return this.WordIDField;
            }
            set {
                if ((this.WordIDField.Equals(value) != true)) {
                    this.WordIDField = value;
                    this.RaisePropertyChanged("WordID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WordServices.IWordServices")]
    public interface IWordServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordServices/GetCategories", ReplyAction="http://tempuri.org/IWordServices/GetCategoriesResponse")]
        HangedMan_Client.WordServices.Category[] GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordServices/GetCategories", ReplyAction="http://tempuri.org/IWordServices/GetCategoriesResponse")]
        System.Threading.Tasks.Task<HangedMan_Client.WordServices.Category[]> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordServices/GetWordsPerCategory", ReplyAction="http://tempuri.org/IWordServices/GetWordsPerCategoryResponse")]
        HangedMan_Client.WordServices.Word[] GetWordsPerCategory(int category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordServices/GetWordsPerCategory", ReplyAction="http://tempuri.org/IWordServices/GetWordsPerCategoryResponse")]
        System.Threading.Tasks.Task<HangedMan_Client.WordServices.Word[]> GetWordsPerCategoryAsync(int category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordServices/getWordSpanish", ReplyAction="http://tempuri.org/IWordServices/getWordSpanishResponse")]
        string getWordSpanish(int wordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordServices/getWordSpanish", ReplyAction="http://tempuri.org/IWordServices/getWordSpanishResponse")]
        System.Threading.Tasks.Task<string> getWordSpanishAsync(int wordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordServices/getWordEnglish", ReplyAction="http://tempuri.org/IWordServices/getWordEnglishResponse")]
        string getWordEnglish(int wordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordServices/getWordEnglish", ReplyAction="http://tempuri.org/IWordServices/getWordEnglishResponse")]
        System.Threading.Tasks.Task<string> getWordEnglishAsync(int wordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordServices/getClueSpanish", ReplyAction="http://tempuri.org/IWordServices/getClueSpanishResponse")]
        string getClueSpanish(int wordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordServices/getClueSpanish", ReplyAction="http://tempuri.org/IWordServices/getClueSpanishResponse")]
        System.Threading.Tasks.Task<string> getClueSpanishAsync(int wordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordServices/getClueEnglish", ReplyAction="http://tempuri.org/IWordServices/getClueEnglishResponse")]
        string getClueEnglish(int wordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordServices/getClueEnglish", ReplyAction="http://tempuri.org/IWordServices/getClueEnglishResponse")]
        System.Threading.Tasks.Task<string> getClueEnglishAsync(int wordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordServices/getCategoryByWordID", ReplyAction="http://tempuri.org/IWordServices/getCategoryByWordIDResponse")]
        string getCategoryByWordID(int wordID, int matchLanguage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordServices/getCategoryByWordID", ReplyAction="http://tempuri.org/IWordServices/getCategoryByWordIDResponse")]
        System.Threading.Tasks.Task<string> getCategoryByWordIDAsync(int wordID, int matchLanguage);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWordServicesChannel : HangedMan_Client.WordServices.IWordServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WordServicesClient : System.ServiceModel.ClientBase<HangedMan_Client.WordServices.IWordServices>, HangedMan_Client.WordServices.IWordServices {
        
        public WordServicesClient() {
        }
        
        public WordServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WordServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WordServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WordServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HangedMan_Client.WordServices.Category[] GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<HangedMan_Client.WordServices.Category[]> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
        
        public HangedMan_Client.WordServices.Word[] GetWordsPerCategory(int category) {
            return base.Channel.GetWordsPerCategory(category);
        }
        
        public System.Threading.Tasks.Task<HangedMan_Client.WordServices.Word[]> GetWordsPerCategoryAsync(int category) {
            return base.Channel.GetWordsPerCategoryAsync(category);
        }
        
        public string getWordSpanish(int wordID) {
            return base.Channel.getWordSpanish(wordID);
        }
        
        public System.Threading.Tasks.Task<string> getWordSpanishAsync(int wordID) {
            return base.Channel.getWordSpanishAsync(wordID);
        }
        
        public string getWordEnglish(int wordID) {
            return base.Channel.getWordEnglish(wordID);
        }
        
        public System.Threading.Tasks.Task<string> getWordEnglishAsync(int wordID) {
            return base.Channel.getWordEnglishAsync(wordID);
        }
        
        public string getClueSpanish(int wordID) {
            return base.Channel.getClueSpanish(wordID);
        }
        
        public System.Threading.Tasks.Task<string> getClueSpanishAsync(int wordID) {
            return base.Channel.getClueSpanishAsync(wordID);
        }
        
        public string getClueEnglish(int wordID) {
            return base.Channel.getClueEnglish(wordID);
        }
        
        public System.Threading.Tasks.Task<string> getClueEnglishAsync(int wordID) {
            return base.Channel.getClueEnglishAsync(wordID);
        }
        
        public string getCategoryByWordID(int wordID, int matchLanguage) {
            return base.Channel.getCategoryByWordID(wordID, matchLanguage);
        }
        
        public System.Threading.Tasks.Task<string> getCategoryByWordIDAsync(int wordID, int matchLanguage) {
            return base.Channel.getCategoryByWordIDAsync(wordID, matchLanguage);
        }
    }
}
