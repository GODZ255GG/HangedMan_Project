//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HangedMan_Client.PlayerServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/HangedMan_Server.Model.POCO")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlayerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PointsEarnedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((object.ReferenceEquals(this.BirthDateField, value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerID {
            get {
                return this.PlayerIDField;
            }
            set {
                if ((this.PlayerIDField.Equals(value) != true)) {
                    this.PlayerIDField = value;
                    this.RaisePropertyChanged("PlayerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PointsEarned {
            get {
                return this.PointsEarnedField;
            }
            set {
                if ((this.PointsEarnedField.Equals(value) != true)) {
                    this.PointsEarnedField = value;
                    this.RaisePropertyChanged("PointsEarned");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PlayerServices.IPlayerServices")]
    public interface IPlayerServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerServices/RegisterPlayer", ReplyAction="http://tempuri.org/IPlayerServices/RegisterPlayerResponse")]
        bool RegisterPlayer(HangedMan_Client.PlayerServices.Player newPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerServices/RegisterPlayer", ReplyAction="http://tempuri.org/IPlayerServices/RegisterPlayerResponse")]
        System.Threading.Tasks.Task<bool> RegisterPlayerAsync(HangedMan_Client.PlayerServices.Player newPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerServices/EmailAlreadyRegistered", ReplyAction="http://tempuri.org/IPlayerServices/EmailAlreadyRegisteredResponse")]
        bool EmailAlreadyRegistered(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerServices/EmailAlreadyRegistered", ReplyAction="http://tempuri.org/IPlayerServices/EmailAlreadyRegisteredResponse")]
        System.Threading.Tasks.Task<bool> EmailAlreadyRegisteredAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerServices/NicknameAlreadyRegistered", ReplyAction="http://tempuri.org/IPlayerServices/NicknameAlreadyRegisteredResponse")]
        bool NicknameAlreadyRegistered(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerServices/NicknameAlreadyRegistered", ReplyAction="http://tempuri.org/IPlayerServices/NicknameAlreadyRegisteredResponse")]
        System.Threading.Tasks.Task<bool> NicknameAlreadyRegisteredAsync(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerServices/TelephoneAlreadyExist", ReplyAction="http://tempuri.org/IPlayerServices/TelephoneAlreadyExistResponse")]
        bool TelephoneAlreadyExist(string telephone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerServices/TelephoneAlreadyExist", ReplyAction="http://tempuri.org/IPlayerServices/TelephoneAlreadyExistResponse")]
        System.Threading.Tasks.Task<bool> TelephoneAlreadyExistAsync(string telephone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerServices/LogIn", ReplyAction="http://tempuri.org/IPlayerServices/LogInResponse")]
        HangedMan_Client.PlayerServices.Player LogIn(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerServices/LogIn", ReplyAction="http://tempuri.org/IPlayerServices/LogInResponse")]
        System.Threading.Tasks.Task<HangedMan_Client.PlayerServices.Player> LogInAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerServices/UpdatePlayerProfile", ReplyAction="http://tempuri.org/IPlayerServices/UpdatePlayerProfileResponse")]
        bool UpdatePlayerProfile(HangedMan_Client.PlayerServices.Player updatePlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerServices/UpdatePlayerProfile", ReplyAction="http://tempuri.org/IPlayerServices/UpdatePlayerProfileResponse")]
        System.Threading.Tasks.Task<bool> UpdatePlayerProfileAsync(HangedMan_Client.PlayerServices.Player updatePlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerServices/GetPoints", ReplyAction="http://tempuri.org/IPlayerServices/GetPointsResponse")]
        int GetPoints(int playerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerServices/GetPoints", ReplyAction="http://tempuri.org/IPlayerServices/GetPointsResponse")]
        System.Threading.Tasks.Task<int> GetPointsAsync(int playerID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlayerServicesChannel : HangedMan_Client.PlayerServices.IPlayerServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlayerServicesClient : System.ServiceModel.ClientBase<HangedMan_Client.PlayerServices.IPlayerServices>, HangedMan_Client.PlayerServices.IPlayerServices {
        
        public PlayerServicesClient() {
        }
        
        public PlayerServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlayerServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RegisterPlayer(HangedMan_Client.PlayerServices.Player newPlayer) {
            return base.Channel.RegisterPlayer(newPlayer);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterPlayerAsync(HangedMan_Client.PlayerServices.Player newPlayer) {
            return base.Channel.RegisterPlayerAsync(newPlayer);
        }
        
        public bool EmailAlreadyRegistered(string email) {
            return base.Channel.EmailAlreadyRegistered(email);
        }
        
        public System.Threading.Tasks.Task<bool> EmailAlreadyRegisteredAsync(string email) {
            return base.Channel.EmailAlreadyRegisteredAsync(email);
        }
        
        public bool NicknameAlreadyRegistered(string nickname) {
            return base.Channel.NicknameAlreadyRegistered(nickname);
        }
        
        public System.Threading.Tasks.Task<bool> NicknameAlreadyRegisteredAsync(string nickname) {
            return base.Channel.NicknameAlreadyRegisteredAsync(nickname);
        }
        
        public bool TelephoneAlreadyExist(string telephone) {
            return base.Channel.TelephoneAlreadyExist(telephone);
        }
        
        public System.Threading.Tasks.Task<bool> TelephoneAlreadyExistAsync(string telephone) {
            return base.Channel.TelephoneAlreadyExistAsync(telephone);
        }
        
        public HangedMan_Client.PlayerServices.Player LogIn(string email, string password) {
            return base.Channel.LogIn(email, password);
        }
        
        public System.Threading.Tasks.Task<HangedMan_Client.PlayerServices.Player> LogInAsync(string email, string password) {
            return base.Channel.LogInAsync(email, password);
        }
        
        public bool UpdatePlayerProfile(HangedMan_Client.PlayerServices.Player updatePlayer) {
            return base.Channel.UpdatePlayerProfile(updatePlayer);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePlayerProfileAsync(HangedMan_Client.PlayerServices.Player updatePlayer) {
            return base.Channel.UpdatePlayerProfileAsync(updatePlayer);
        }
        
        public int GetPoints(int playerID) {
            return base.Channel.GetPoints(playerID);
        }
        
        public System.Threading.Tasks.Task<int> GetPointsAsync(int playerID) {
            return base.Channel.GetPointsAsync(playerID);
        }
    }
}
